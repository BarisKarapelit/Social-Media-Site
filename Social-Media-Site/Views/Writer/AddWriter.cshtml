@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!--using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post, new { class = "well form-horizontal ", id = "contact_form" }))
{

<fieldset>-->
<!-- Form Name -->
<!--<center><h2><b>Yeni Yazar Ekleme</b></h2></center><br>-->
<!-- Text input-->
<!--<div class="form-group">
    <label class="col-md-4 control-label">@Html.DisplayNameFor(model => model.WriterName)</label>
    <div class="col-md-4 inputGroupContainer">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
            @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control", @name = "first_name", @placeholder = @Html.DisplayNameFor(model => model.WriterName), @type = "text" })
        </div>
        @Html.ValidationMessageFor(x => x.WriterName)

    </div>
</div>-->
<!-- Text input-->
<!--<div class="form-group">
    <label class="col-md-4 control-label">@Html.DisplayNameFor(model => model.WriterSurName)</label>
    <div class="col-md-4 inputGroupContainer">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
            @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control", @name = "last_name", @placeholder = @Html.DisplayNameFor(model => model.WriterSurName), @type = "text" })
        </div>
        @Html.ValidationMessageFor(x => x.WriterSurName)
    </div>
</div>-->
<!-- Text input-->
<!--<div class="form-group">
    <label class="col-md-4 control-label">@Html.DisplayNameFor(model => model.WriterPassword)</label>
    <div class="col-md-4 inputGroupContainer">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
            @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control", @name = "user_password", @placeholder = @Html.DisplayNameFor(model => model.WriterPassword), @type = "text" })
        </div>
        @Html.ValidationMessageFor(x => x.WriterPassword)
    </div>
</div>-->
<!-- Text input-->
<!--<div class="form-group">
    <label class="col-md-4 control-label">@Html.DisplayNameFor(model => model.WriterPassword) Onayla</label>
    <div class="col-md-4 inputGroupContainer">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>

            @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control", @name = "user_password", @placeholder = @Html.DisplayNameFor(model => model.WriterPassword) + " Onayla", @type = "text" })
        </div>
        @Html.ValidationMessageFor(x => x.WriterPassword)
    </div>
</div>-->
<!-- Text input-->
<!--<div class="form-group">
    <label class="col-md-4 control-label">@Html.DisplayNameFor(model => model.WriterMail)</label>
    <div class="col-md-4 inputGroupContainer">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
            @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control", @name = "email", @placeholder = @Html.DisplayNameFor(model => model.WriterMail), @type = "text" })
        </div>
        @Html.ValidationMessageFor(x => x.WriterMail)
    </div>
</div>

<div class="form-group">
    <label class="col-md-4 control-label">@Html.DisplayNameFor(model => model.WriterAbout)</label>
    <div class="col-md-4 inputGroupContainer">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
            @Html.TextAreaFor(x => x.WriterMail, new { @class = "form-control", @name = "email", @placeholder = @Html.DisplayNameFor(model => model.WriterAbout), @type = "text" })
        </div>
        @Html.ValidationMessageFor(x => x.WriterAbout)
    </div>
</div>

<div class="form-group">
    <label class="col-md-4 control-label">@Html.DisplayNameFor(model => model.WriterImage)</label>
    <div class="col-md-4 inputGroupContainer">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
         
        </div>
        @Html.ValidationMessageFor(x => x.WriterImage)
    </div>
</div>-->
<!-- Select Basic -->
<!-- Success message -->
<!--<div class="alert alert-success" role="alert" id="success_message">Ekle <i class="glyphicon glyphicon-thumbs-up"></i> Success!.</div>-->
<!-- Button -->
<!--<div class="form-group">
        <label class="col-md-4 control-label"></label>
        <div class="col-md-4">
            <br>
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp<button type="submit" class="btn btn-warning" name="btn" value="ekle">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspEKLE <span class="glyphicon glyphicon-send"></span>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</button>
        </div>
    </div>
    <style>
        #success_message {
            display: none;
        }
    </style>
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>

</fieldset>

}-->




<link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/CSS/Writer/WriterAdd/style.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Js/Writer/main.js"></script>
<script src="~/Js/Writer/popper.js"></script>
<link href="~/CSS/Writer/WriterAdd/add.css" rel="stylesheet" />
<title>Yazar Ekleme</title>


@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post, new { @class = "container" }))
{

    <section class="content-header">

        <div class="container-fluid">
            <div class="row mb-2">

                <div class="col-sm-6">
                    <h1></h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/Writer/Index">Yazar</a></li>
                        <li class="breadcrumb-item active">Yazar Ekle</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>


    <div class="row justify-content-center">
        <div class="col-md-7 col-lg-6 col-xl-5">
            <div class="login-wrap p-4 p-md-5">
                <div class="icon d-flex align-items-center justify-content-center">
                    <label for="WriterImage" class="fa fa-edit justify-content-center align-items-center"></label>
                    @Html.TextBoxFor(m => m.WriterImage, new { type = "file", @id= "WriterImage" , style = "display: none;" })
                </div>
                <h3 class="text-center mb-4">Yazar Ekleme</h3>
                <form action="#" class="signup-form">
                    <div class="form-group mb-3">
                        <label class="label" for="first_name">@Html.DisplayNameFor(model => model.WriterName)</label>
                        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control", @name = "first_name", @placeholder = "Tom", @type = "text" })
                    </div>
                    <div class="form-group mb-3">
                        <label class="label" for="last_name">@Html.DisplayNameFor(model => model.WriterSurName)</label>

                        @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control", @name = "last_name", @placeholder = "Doe", @type = "text" })
                    </div>
                    <div class="form-group mb-3">
                        <label class="label" for="email">@Html.DisplayNameFor(model => model.WriterMail)</label>

                        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control", @name = "email", @placeholder = "johndoe@gmail.com", @type = "text" })
                    </div>
                    <div class="form-group mb-3">
                        <label class="label" for="user_password">@Html.DisplayNameFor(model => model.WriterPassword)</label>
                        @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control", @name = "user_password", @placeholder = @Html.DisplayNameFor(model => model.WriterPassword), @type = "text" })
                        <span toggle="#password-field" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label class="label" for="WriterAbout">@Html.DisplayNameFor(model => model.WriterAbout)</label>
                        @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control", @name = "WriterAbout", @placeholder = "Açıklama", @type = "text" })
                    </div>
                    <div class="form-group d-md-flex">
                        <div class="w-100 text-left">
                            <label class="checkbox-wrap checkbox-primary">
                                Hizmet açısından tüm ifadeleri kabul ediyorum
                                <input type="checkbox" checked="">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="form-control btn btn-primary rounded submit px-3">Ekle</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
   
}